import React, { useState } from "react";
import { KeyboardArrowDown, KeyboardArrowRight } from "@mui/icons-material";
import { Box, IconButton, Typography } from "@mui/material";
import { Link } from "react-router-dom";
import Footer from "../Components/Footer";
import Header from "../Components/Header";
import HeroSection from "../Components/HeroSection";
import beachesData from "./name.json"; // Import the JSON data

const BeachWiki = () => {
  const [expandedSections, setExpandedSections] = useState(["west-coast"]);
  const [contentVisible, setContentVisible] = useState(true);

  const toggleSection = (sectionId) => {
    setExpandedSections((prev) =>
      prev.includes(sectionId) ? prev.filter((id) => id !== sectionId) : [...prev, sectionId]
    );
  };

  const scrollToSection = (sectionId) => {
    const element = document.getElementById(sectionId);
    if (element) {
      element.scrollIntoView({ behavior: "smooth" });
    }
  };

  return (
    <div>
      <Header />
      <HeroSection title="Beaches" subtitle="Discover the Best Beaches in India" />

      {/* Main Wrapper */}
      <Box className="flex min-h-screen bg-gray-50 relative">
        {/* Left Sidebar (Sticky below HeroSection) */}
        <Box
          className="w-64 h-screen overflow-y-auto border-r border-gray-200 bg-white p-4 shadow-md"
          style={{ position: "sticky", top: "0px" }} // Sidebar starts after HeroSection
        >
          <Box className="flex items-center justify-between mb-4 pb-2 border-b border-gray-200">
            <Typography variant="h6" className="font-bold text-gray-800">
              Contents
            </Typography>
            <button onClick={() => setContentVisible(!contentVisible)} className="text-blue-600 text-sm hover:underline">
              {contentVisible ? "hide" : "show"}
            </button>
          </Box>

          {contentVisible && (
            <Box className="space-y-2">
              {Object.keys(beachesData).map((sectionId) => (
                <Box key={sectionId}>
                  <Box
                    className="flex items-center hover:bg-gray-100 rounded px-3 py-2 cursor-pointer transition-colors"
                    onClick={() => toggleSection(sectionId)}
                  >
                    <IconButton size="small" className="p-0 mr-2">
                      {expandedSections.includes(sectionId) ? (
                        <KeyboardArrowDown fontSize="small" />
                      ) : (
                        <KeyboardArrowRight fontSize="small" />
                      )}
                    </IconButton>
                    <Typography className="text-blue-600 hover:underline text-sm">
                      {sectionId.replace(/-/g, ' ').replace(/\b\w/g, char => char.toUpperCase())}
                    </Typography>
                  </Box>
                  {expandedSections.includes(sectionId) && (
                    <Box className="ml-6 space-y-1">
                      {Object.keys(beachesData[sectionId]).map((subsectionId) => (
                        <Box
                          key={subsectionId}
                          onClick={() => scrollToSection(subsectionId)}
                          className="flex items-center hover:bg-gray-100 rounded px-3 py-2 cursor-pointer transition-colors"
                        >
                          <Typography className="text-blue-600 hover:underline text-sm">
                            {subsectionId}
                          </Typography>
                        </Box>
                      ))}
                    </Box>
                  )}
                </Box>
              ))}
            </Box>
          )}
        </Box>

        {/* Main Content */}
        <Box className="ml-4 p-8 flex-grow bg-white shadow-inner">
          {Object.keys(beachesData).map((sectionId) => (
            <React.Fragment key={sectionId}>
              <Typography variant="h4" id={sectionId} className="mb-6 text-gray-800">
                {sectionId.replace(/-/g, ' ').replace(/\b\w/g, char => char.toUpperCase())}
              </Typography>
              {Object.keys(beachesData[sectionId]).map((subsectionId) => (
                <Box id={subsectionId} className="mb-6" key={subsectionId}>
                  <Typography variant="h5" className="mb-2 text-gray-700">
                    {subsectionId}
                  </Typography>
                  <Box className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    {beachesData[sectionId][subsectionId].map((beach) => (
                      <Box key={beach} className="bg-blue-100 p-2 rounded">
                        <Link to={`/beaches/${beach.replace(/\s+/g, '')}`} className="text-gray-600 hover:underline">
                          {beach}
                        </Link>
                      </Box>
                    ))}
                  </Box>
                </Box>
              ))}
            </React.Fragment>
          ))}
        </Box>
      </Box>
      <Footer />
    </div>
  );
};

export default BeachWiki;
